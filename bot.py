import logging
from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import Application, CommandHandler, MessageHandler, CallbackQueryHandler, filters, CallbackContext
import asyncio
import nest_asyncio

# Logging-’´ ’Ø’°÷Ä’£’°’æ’∏÷Ä’∏÷Ç’¥’∂’•÷Ä’®
logging.basicConfig(
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    level=logging.INFO
)
logger = logging.getLogger(__name__)

# ’à’≤’ª’∏÷Ç’µ’∂’´ ’∞’°’≤’∏÷Ä’§’°’£÷Ä’∏÷Ç’©’µ’°’∂ ÷Ü’∏÷Ç’∂’Ø÷Å’´’°
async def welcome_new_member(update: Update, context: CallbackContext):
    try:
        welcome_message = """‘≤’°÷Ä’´ ’£’°’¨’∏÷Ç’Ω’ø ƒîƒΩƒ¨≈¶ƒî | √ùV≈ä ’Ø’¨’°’∂÷â
                1. ’Ä’°÷Ä’£’•÷Ñ ’¥’´’¥’µ’°’∂÷Å÷â
                2. ‘Ω’∏÷Ç’Ω’°÷É’•÷Ñ ’æ’´÷Ä’°’æ’∏÷Ä’°’∂÷Ñ’∂’•÷Ä’´÷Å÷â

                üí¨ ’ç’•’≤’¥’´÷Ä ’∂’•÷Ä÷Ñ÷á’´ ’Ø’∏’≥’°’Ø’®, ’∏÷Ä’∫’•’Ω’¶’´ ’Ω’ø’°’∂’°’Ω ’°’∂’æ’°’∂ ’Ø’∏’§’®, ‘ø’°’∂’∏’∂’°’§÷Ä’∏÷Ç’©’µ’∏÷Ç’∂÷â
        """
        
        # ‘ø’∏’≥’°’Ø’ù STANAL
        keyboard = [
            [InlineKeyboardButton("üì© ‘ø’°’∂’∏’∂’°’§÷Ä’∏÷Ç’©’µ’∏÷Ç’∂", url=f"https://t.me/{context.bot.username}?start=welcome")],
            [InlineKeyboardButton("‚öîÔ∏è ‘±’∂’æ’°’∂ ’Ø’∏’§’®", callback_data='stanal')]  # STANAL ’Ø’∏’≥’°’Ø’®
        ]
        reply_markup = InlineKeyboardMarkup(keyboard)
        
        for new_member in update.message.new_chat_members:
            await context.bot.send_message(
                chat_id=update.effective_chat.id,
                text=f"‘≤’°÷Ä÷á {new_member.first_name}, {welcome_message}",
                parse_mode="Markdown",
                reply_markup=reply_markup,
                disable_notification=True  # ‘±’º’°’∂÷Å ’Æ’°’∂’∏÷Ç÷Å’¥’°’∂
            )
            logger.info(f"’à÷Ç’≤’°÷Ä’Ø’æ’•÷Å ’∏’≤’ª’∏÷Ç’µ’∂’´ ’∞’°’≤’∏÷Ä’§’°’£÷Ä’∏÷Ç’©’µ’∏÷Ç’∂ {new_member.first_name}-’´’∂")
    except Exception as e:
        logger.error(f"’ç’≠’°’¨ ’∏’≤’ª’∏÷Ç’µ’∂’´ ’∞’°’≤’∏÷Ä’§’°’£÷Ä’∏÷Ç’©’µ’∏÷Ç’∂ ’∏÷Ç’≤’°÷Ä’Ø’•’¨’´’Ω: {e}")

# STANAL ’Ø’∏’≥’°’Ø’´ ’Ω’•’≤’¥’¥’°’∂ ’∞’•’ø÷á’°’∂÷Ñ
async def handle_stanal_button(update: Update, context: CallbackContext):
    try:
        query = update.callback_query
        await query.answer()  # ‘ª ’∫’°’ø’°’Ω’≠’°’∂, ’∏÷Ä ’Ø’∏’≥’°’Ø’® ’Ω’•’≤’¥’æ’•’¨ ’ß
        
        # ’à÷Ç’≤’°÷Ä’Ø’∏÷Ç’¥ ’•’∂÷Ñ ’¥’´’°’µ’∂ STANAL ’∞÷Ä’°’¥’°’∂’´ ’∞’•’ø ’Ø’°’∫’æ’°’Æ ’∞’°’≤’∏÷Ä’§’°’£÷Ä’∏÷Ç’©’µ’∏÷Ç’∂’®
        stanal_message = """∆≥V∆ù‰∏®YOURNAME"""
        await query.message.reply_text(stanal_message)  # ‘±’∞’° ’°’µ’Ω’ø’•’≤ ’∏÷Ç’≤’°÷Ä’Ø’∏÷Ç’¥ ’•’∂÷Ñ STANAL-’´’∂ ’æ’•÷Ä’°’¢’•÷Ä’∏’≤ ’∞’°’≤’∏÷Ä’§’°’£÷Ä’∏÷Ç’©’µ’∏÷Ç’∂’®
        logger.info(f"’à÷Ç’≤’°÷Ä’Ø’æ’•÷Å STANAL ’∞’°’≤’∏÷Ä’§’°’£÷Ä’∏÷Ç’©’µ’∏÷Ç’∂ {query.from_user.first_name}-’´’∂")
    except Exception as e:
        logger.error(f"’ç’≠’°’¨ STANAL ’∞’°’≤’∏÷Ä’§’°’£÷Ä’∏÷Ç’©’µ’∏÷Ç’∂ ’∏÷Ç’≤’°÷Ä’Ø’•’¨’´’Ω: {e}")

# ‘ø’°’∂’∏’∂’°’§÷Ä’∏÷Ç’©’µ’°’∂ ’¥’°’Ω’´’∂ ’∞’°’≤’∏÷Ä’§’°’£÷Ä’∏÷Ç’©’µ’°’∂ ÷Ü’∏÷Ç’∂’Ø÷Å’´’°
async def send_rules(update: Update, context: CallbackContext):
    try:
        # ’à÷Ç’≤’°÷Ä’Ø’∏÷Ç’¥ ’•’∂÷Ñ ’¥’´’°’µ’∂ ’Ø’°’∂’∏’∂’°’§÷Ä’∏÷Ç’©’µ’°’∂ ’∞’°’≤’∏÷Ä’§’°’£÷Ä’∏÷Ç’©’µ’∏÷Ç’∂’® /start ’∞÷Ä’°’¥’°’∂’´÷Å
        rules_message = f"""‘≤’°÷Ä’´ ’£’°’¨’∏÷Ç’Ω’ø ƒîƒΩƒ¨≈¶ƒî | √ùV≈ä:
‚öîÔ∏è ƒîƒΩƒ¨≈¶ƒî | √ùV≈ä Clan ‚Äî ‘ø’°’∂’∏’∂’°’§÷Ä’∏÷Ç’©’µ’∏÷Ç’∂

1‚Ä§ ’ä’°’∞’∫’°’∂’•÷Ñ ’∞’°÷Ä’£’°’∂÷Ñ ’¥’´’¥’µ’°’∂÷Å ’∂’Ø’°’ø’¥’°’¥’¢÷â
‘≤’∏’¨’∏÷Ä ’≠’°’≤’°÷Å’∏’≤’∂’•÷Ä’∂ ’°’µ’Ω’ø’•’≤ ’∞’°’æ’°’Ω’°÷Ä ’•’∂’ù ’°’∂’Ø’°’≠ ’Ω’•’º’´÷Å, ÷É’∏÷Ä’±’´÷Å ’Ø’°’¥ ’¥’°’Ø’°÷Ä’§’°’Ø’´÷Å÷â

2‚Ä§ ’é’´÷Ä’°’æ’∏÷Ä’°’∂÷Ñ’∂’•÷Ä’∂ ’∏÷Ç ’°’∂’∞’°÷Ä’£’°’¨’´÷Å ’∫’°’∞’æ’°’Æ÷Ñ’® ’°÷Ä’£’•’¨’æ’∏÷Ç’¥ ’•’∂÷â
’â’•’∂ ’©’∏÷Ç’µ’¨’°’ø÷Ä’æ’∏÷Ç’¥ ’°’∂’±’∂’°’Ø’°’∂ ’∞’°÷Ä’±’°’Ø’∏÷Ç’¥’∂’•÷Ä, ’°’ø’•’¨’∏÷Ç’©’µ’°’∂ ’≠’∏’Ω÷Ñ ’Ø’°’¥ ’æ’´÷Ä’°’æ’∏÷Ä’°’∂÷Ñ’∂’•÷Ä÷â

3‚Ä§ ’î’∂’∂’°÷Ä’Ø’∏÷Ç’¥’∂’•÷Ä’® ’∫’•’ø÷Ñ ’ß ’∞’°’¥’°’∫’°’ø’°’Ω’≠’°’∂’•’∂ ’≠’°’≤’´ ’©’•’¥’°’µ’´’∂÷â
‘Ω’∏÷Ç’¥’¢’® ’∂’°’≠’°’ø’•’Ω’æ’°’Æ ’ß ’≠’°’≤’´, ’º’°’¶’¥’°’æ’°÷Ä’∏÷Ç’©’µ’∏÷Ç’∂’∂’•÷Ä’´ ÷á ’Ø’¨’°’∂’´ ’Ø’°’¶’¥’°’Ø’•÷Ä’∫’π’°’Ø’°’∂ ’∞’°÷Ä÷Å’•÷Ä’´ ’∞’°’¥’°÷Ä÷â

4‚Ä§ ’â’´ ’©’∏÷Ç’µ’¨’°’ø÷Ä’æ’∏÷Ç’¥ ’°’∂’±’∂’°’Ø’°’∂ ’¢’∂’∏÷Ç’µ’©’´ ’°’∂’∞’°’∂’£’Ω’ø’°÷Å’∂’∏’≤ ’∞’°’≤’∏÷Ä’§’°’£÷Ä’∏÷Ç’©’µ’∏÷Ç’∂’∂’•÷Ä÷â
‘Ω’∂’§÷Ä’∏÷Ç’¥ ’•’∂÷Ñ ’∞’°÷Ä’£’•’¨ ’¢’∏’¨’∏÷Ä ’°’∂’§’°’¥’∂’•÷Ä’´’∂, ’∞’°’ø’Ø’°’∫’•’Ω ’∞’°’Ø’°’º’°’Ø ’Ω’•’º’´ ’∂’•÷Ä’Ø’°’µ’°÷Å’∏÷Ç÷Å’´’π’∂’•÷Ä’´’∂÷â

5‚Ä§ ‘Ω’°’≤’°’¨’´’Ω ’∞’•’ø÷á’•÷Ñ ’©’´’¥’°’µ’´’∂ ’º’°’¶’¥’°’æ’°÷Ä’∏÷Ç’©’µ’°’∂’®÷â
‘Ω’°’≤’°÷Å’•÷Ñ ’∏÷Ä’∫’•’Ω ’©’´’¥’ù ’¨’°’æ ’°÷Ä’§’µ’∏÷Ç’∂÷Ñ’∂’•÷Ä’´ ’∞’°’¥’°÷Ä÷â 
---------------
‘ø’¨’°’∂’´’∂ ’¥’´’°’∂’°’¨’∏÷Ç ’∞’°’¥’°÷Ä ÷É’∏’≠’•÷Ñ ’Å’•÷Ä ’°’∂’∏÷Ç’∂’® 48 ’™’°’¥’æ’° ’®’∂’©’°÷Å÷Ñ’∏÷Ç’¥ ’°’µ’¨’°’∫’•’Ω ’Ø’∞’•’º’°÷Å’æ’•÷Ñ ’Ø’¨’°’∂’´÷Å÷â

’ç’•’≤’¥’•÷Ñ ‚öîÔ∏è ∆≥V∆ù‰∏® ’Ø’∏’≥’°’Ø’® ’°’∂’æ’°’∂ ’§’´’¥’°÷Å’´ ’Ø’∏’§’® ’Ω’ø’°’∂’°’¨’∏÷Ç ’∞’°’¥’°÷Ä÷â

’ç’´÷Ä’∏’æ ƒîƒΩƒ¨≈¶ƒî | √ùV≈ä ’¢’∏’ø÷â
        """
        
        # ‘ø’∏’≥’°’Ø’ù STANAL
        keyboard = [
            [InlineKeyboardButton("‚öîÔ∏è ∆≥V∆ù‰∏®", callback_data='stanal')]  # STANAL ’Ø’∏’≥’°’Ø’®
        ]
        reply_markup = InlineKeyboardMarkup(keyboard)

        # ’à÷Ç’≤’°÷Ä’Ø’∏÷Ç’¥ ’•’∂÷Ñ ’Ø’°’∂’∏’∂’°’§÷Ä’∏÷Ç’©’µ’°’∂ ’∞’°’≤’∏÷Ä’§’°’£÷Ä’∏÷Ç’©’µ’∏÷Ç’∂’®
        await update.message.reply_text(rules_message, parse_mode="Markdown", reply_markup=reply_markup)
        logger.info("’à÷Ç’≤’°÷Ä’Ø’æ’•÷Å ’Ø’°’∂’∏’∂’°’§÷Ä’∏÷Ç’©’µ’°’∂ ’∞’°’≤’∏÷Ä’§’°’£÷Ä’∏÷Ç’©’µ’∏÷Ç’∂")
    except Exception as e:
        logger.error(f"’ç’≠’°’¨ ’Ø’°’∂’∏’∂’°’§÷Ä’∏÷Ç’©’µ’°’∂ ’∞’°’≤’∏÷Ä’§’°’£÷Ä’∏÷Ç’©’µ’∏÷Ç’∂ ’∏÷Ç’≤’°÷Ä’Ø’•’¨’´’Ω: {e}")

# ‘≥’¨’≠’°’æ’∏÷Ä ÷Ü’∏÷Ç’∂’Ø÷Å’´’°
async def main():
    try:
        # ‘±’µ’Ω’ø’•’≤ ’∂’•÷Ä’¥’∏÷Ç’Æ’•÷Ñ ’±’•÷Ä ’¢’∏’ø’´ API Token-’®
        application = Application.builder().token("7718585924:AAFandSJzHCtueAo5kb_07tc54aLgy2NYgY").build()

        # ‘±’æ’•’¨’°÷Å’∂’∏÷Ç’¥ ’•’∂÷Ñ ’∂’∏÷Ä ’°’∂’§’°’¥’´ ’∏’≤’ª’∏÷Ç’µ’∂’´ ’∞’°’≤’∏÷Ä’§’°’£÷Ä’∏÷Ç’©’µ’°’∂ ’£’∏÷Ä’Æ’´÷Ñ’®
        application.add_handler(MessageHandler(filters.StatusUpdate.NEW_CHAT_MEMBERS, welcome_new_member))

        # ‘±’æ’•’¨’°÷Å’∂’∏÷Ç’¥ ’•’∂÷Ñ /start ’∞÷Ä’°’¥’°’∂’®
        application.add_handler(CommandHandler("start", send_rules))

        # ‘±’æ’•’¨’°÷Å’∂’∏÷Ç’¥ ’•’∂÷Ñ STANAL ’Ø’∏’≥’°’Ø’´ callback query-’´ ’£’∏÷Ä’Æ’´÷Ñ’®
        application.add_handler(CallbackQueryHandler(handle_stanal_button, pattern='^stanal$'))
        
        # ’ç’Ø’Ω’∏÷Ç’¥ ’•’∂÷Ñ ’¢’∏’ø’®
        logger.info("‘≤’∏’ø’® ’∫’°’ø÷Ä’°’Ω’ø ’ß ’®’∂’§’∏÷Ç’∂’•’¨’∏÷Ç ’∞÷Ä’°’∞’°’∂’£’∂’•÷Ä...")
        await application.run_polling()
        logger.info("‘≤’∏’ø’® ’Ω’Ø’Ω’•÷Å ’°’∑’≠’°’ø’•’¨...")
    except Exception as e:
        logger.error(f"’ç’≠’°’¨ ’¢’∏’ø’´ ’£’∏÷Ä’Æ’°÷Ä’Ø’¥’°’∂ ’™’°’¥’°’∂’°’Ø: {e}")

# ’É’´’∑’ø asyncio event loop-’´ ’£’∏÷Ä’Æ’°÷Ä’Ø’∏÷Ç’¥
if __name__ == "__main__":
    nest_asyncio.apply()
    try:
        if not asyncio.get_event_loop().is_running():
            asyncio.run(main())
        else:
            loop = asyncio.get_running_loop()
            loop.create_task(main())
    except Exception as e:
        logger.critical(f"‘±’∂’Ω’∫’°’Ω’•’¨’´ ’Ω’≠’°’¨: {e}")
